<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:p="http://primefaces.org/ui"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core">

    <h:head>
        <meta charset="utf-8"/>
        <title>Heatmaps</title>
        <style>
            html, body {
                height: 100%;
                margin: 0;
                padding: 0;
            }
            #map {
                height: 100%;
            }
            #floating-panel {
                position: absolute;
                top: 10px;
                left: 10px;
                z-index: 5;
                background-color: #fff;
                padding: 5px;
                border: 1px solid #999;
                text-align: left;
                font-family: 'Roboto','sans-serif';
                line-height: 30px;
                padding-left: 10px;
            }

            #floating-panel {
                background-color: #fff;
                border: 1px solid #999;
                padding: 5px;
                position: absolute;
                top: 10px;
                z-index: 5;
            }
        </style>
    </h:head>

    <h:body>
        <div id="floating-panel">
            <button onclick="toggleHeatmap()">Toggle Heatmap</button>
            <button onclick="changeGradient()">Change gradient</button>
            <button onclick="changeRadius()">Change radius</button>
            <button onclick="changeOpacity()">Change opacity</button>
            <br/>
            <h:form> 
                <h:panelGrid columns="2">
                    <label>Tipo de reclamo: </label>
                    <h:selectOneMenu value="#{reclamosWebMB.reclamo.fkCodTipoReclamo.codTipoReclamo}">
                        <f:selectItem itemLabel="Seleccione un tipo de reclamo" 
                                      noSelectionOption="false"
                                      itemDisabled="true"/>
                        <f:selectItems value="#{reclamosWebMB.tiposDeReclamos}" 
                                       var="tiposReclamos"
                                       itemValue="#{tiposReclamos.codTipoReclamo}" 
                                       itemLabel="#{tiposReclamos.nombreTipoReclamo.toUpperCase()}"/>
                    </h:selectOneMenu>


                    <!--                    <label for="estado">Estado:</label>
                                        <h:selectManyCheckbox id="estado" value="">
                                            <f:selectItem itemValue="1" itemLabel="Pendientes" />
                                            <f:selectItem itemValue="2" itemLabel="Atendidos" />
                                            <f:selectItem itemValue="3" itemLabel="Finalizados" />
                                        </h:selectManyCheckbox>-->



                    <label for="fechaDesde">Fecha desde: </label>
                    <p:calendar id="fechaInicio" 
                                value="#{reclamosWebMB.fechaDesde}"
                                pattern="dd/MM/yyyy"
                                mask="true"
                                locale="es"/>

                    <label for="fechaHasta">Fecha hasta: </label>
                    <p:calendar id="fechaFin"
                                value="#{reclamosWebMB.fechaHasta}"
                                pattern="dd/MM/yyyy"
                                mask="true"
                                locale="es"/>



                    <label for="tipoMapa">Tipo de mapa:</label>
                    <h:selectOneRadio id="tipoMapa" >
                        <f:selectItem itemValue="1" itemLabel="Mapa con marcadores" />
                        <f:selectItem itemValue="2" itemLabel="Mapa de calor" />
                    </h:selectOneRadio>
                    <h:commandButton class="btn btn-primary" action="#{reclamosWebMB.consultarPorRangoDeFecha()}" value="Consultar"/>
                    <h:outputText value="#{reclamosWebMB.resultadoConsulta}"/>
                </h:panelGrid>

            </h:form>
        </div>

        <div id="map"></div>



        <h:outputScript>


            var mapType = 'heatmap';

            function initMap() {

            var asuncion = new google.maps.LatLng(-25.2929451, -57.6072704);

            var map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: -25.2929451, lng: -57.6072704},
            zoom: 13,
            mapTypeId: google.maps.MapTypeId.TERRAIN
            });

            if (mapType === 'heatmap') {
            heatmap(map, getPoints());
            } else if (mapType === 'markers') {
            markers(map, getPoints());
            }
            }

            function heatmap(map, data) {

            var points = [];

            $.each(data, function (index, d) {

            points[index] = new google.maps.LatLng(d.lat, d.lng)

            });

            var heatmap = new google.maps.visualization.HeatmapLayer({
            data: points,
            map: map
            });
            }

            function markers(map, data) {

            var bounds = new google.maps.LatLngBounds();
            var infoWindow = new google.maps.InfoWindow(), marker, i;

            $.each(data, function (index, d) {

            var infoWindowContent =
            '<div class="info_content">' +
                '<h3>' + d.title + '</h3>' +
                '<p>' + d.direccion + '</p>' +
                '<p>' + d.tipoReclamo + '</p>' +
                '</div>'
            ;

            var position = new google.maps.LatLng(d.lat, d.lng);
            bounds.extend(position);

            marker = new google.maps.Marker({
            position: position,
            map: map,
            title: d.title
            });

            // Se agrega una informaci√≥n por cada marker
            google.maps.event.addListener(marker, 'click', (function (marker, i) {
            return function () {
            infoWindow.setContent(infoWindowContent);
            infoWindow.open(map, marker);
            }
            })(marker, i));

            });

            }

            function getPoints() {
            var data = [
            <ui:repeat value = "#{reclamosWebMB.listaRec}" var = "reclamo" varStatus="estado" >
                {
                lat: #{reclamo.latitud},
                lng: #{reclamo.longitud},
                title: #{reclamo.fechaReclamo},
                tipoReclamo: #{reclamo.fkCodTipoReclamo.nombreTipoReclamo},
                direccion: #{reclamo.direccionReclamo}
                }<h:outputText value="," rendered="#{!estado.last}"/>
            </ui:repeat>
            ];

            return data;
            }
        </h:outputScript>


        <script  type="text/javascript"
                 src="https://maps.googleapis.com/maps/api/js?key=AIzaSyByu13Mvy_-A5_JQBsHfVdU_-bU5C6GlQY&amp;libraries=visualization&amp;callback=initMap">
        </script>


    </h:body>

</html>